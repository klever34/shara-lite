version: 2.1
workflows:
  # TODO Remove Test
  test:
    jobs:
      - checkout_code:
          merged: false
          context: shara-dev
          filters:
            branches:
              only:
                - feature/auto-versioning
  internal:
    jobs:
      - checkout_code:
          context: shara-dev
          filters:
            branches:
              ignore:
                - master
                - develop
                - discovery
      - test:
          requires:
            - checkout_code
          filters:
            branches:
              ignore:
                - master
                - develop
                - discovery
      - fastlane:
          context: shara-dev
          lane: internal
          requires:
            - checkout_code
            - test
          filters:
            branches:
              ignore:
                - master
                - develop
                - discovery
  discovery:
    jobs:
      - checkout_code:
          context: shara-dev
          filters:
            branches:
              only:
                - develop
                - discovery
                - master
      - test:
          requires:
            - checkout_code
      - request-approval:
          type: approval
          requires:
            - checkout_code
            - test
      - fastlane:
          context: shara-dev
          lane: play
          track: internal
          requires:
            - request-approval
          filters:
            branches:
              only:
                - discovery
      # TODO Production Release Workflow
jobs:
  checkout_code:
    docker:
      - image: circleci/node:12
    parameters:
      merged:
        type: boolean
        default: false
    steps:
      - checkout
      - run:
          name: Yarn Install Dependencies
          command: yarn install
      # auto-versioning: When Discovery or Develop bump patch
      - when:
          condition: <<parameters.merged>>
          steps:
            - run:
                name: Bump version number before build so image has same version as docker tag
                command: |
                  CURRENT_VERSION=$(jq ".version" -r package.json)
                  NEW_VERSION=$(./bin/semver bump patch ${CURRENT_VERSION});
                  jq ".version=\"${NEW_VERSION}\"" package.json > package.json-new && mv package.json-new package.json
                  echo "export NEW_VERSION=${NEW_VERSION}" >> $BASH_ENV
                  echo "CURRENT_VERSION: ${CURRENT_VERSION}"
                  echo "NEW_VERSION: ${NEW_VERSION}"
      # auto-versioning: When unmerged i.e. feature branches, bump build
      - unless:
          condition: <<parameters.merged>>
          steps:
            - run:
                name: Bump version number before build so image has same version as docker tag
                command: |
                  CURRENT_VERSION=$(jq ".version" -r package.json)
                  NEW_VERSION=$(./bin/semver bump build "build.${CIRCLE_BUILD_NUM}" ${CURRENT_VERSION});
                  jq ".version=\"${NEW_VERSION}\"" package.json > package.json-new && mv package.json-new package.json
                  echo "export NEW_VERSION=${NEW_VERSION}" >> $BASH_ENV
                  echo "CURRENT_VERSION: ${CURRENT_VERSION}"
                  echo "CURRENT_VERSION: ${CURRENT_VERSION}"
                  echo "NEW_VERSION: ${NEW_VERSION}"
      - run:
          name: Setup Credentials
          command: |
            echo -n ${FIREBASE_GOOGLE_SERVICES_KEY} | base64 -d -i > android/app/google-services.json
            echo -n ${GOOGLE_PLAY_STORE_SERVICE_ACCOUNT_KEY} | base64 -d -i > android/google-play-store-service-account.json
            echo -n ${SHARE_ANDROID_KEYSTORE} | base64 -d -i > android/app/shara.keystore
            echo -n ${SHARA_MOBILE_ENV} | base64 -d -i > .env
            echo -n ${SHARA_ANDROID_KEYSTORE_CREDENTIALS} | base64 -d -i >> android/gradle.properties
            sed -i "s#SHARA_VERSION_CODE#${CIRCLE_BUILD_NUM}#g" android/app/build.gradle
            sed -i "s#SHARA_VERSION_NAME#${NEW_VERSION}#g" android/app/build.gradle

      # TODO Commit version updates
      # TODO Push version updates
      - persist_to_workspace:
          paths: .
          root: .
  test:
    docker:
      - image: circleci/node:12
    steps:
      - attach_workspace:
          at: .
      - run:
          command: yarn lint
          name: Run ESLint
  fastlane:
    parameters:
      lane:
        type: string
        default: test
      track:
        type: string
        default: internal
    docker:
      - image: circleci/android:api-27-node
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install Fastlane & Firebase tools
          command: |
            cd android
            bundle install
            curl -sL https://firebase.tools | bash
      - run:
          name: Fastlane <<parameters.lane>>
          command: |
            cd android
            bundle exec fastlane <<parameters.lane>>
          environment:
            GOOGLE_PLAY_TRACK: <<parameters.track>>
      - store_artifacts:
          path: fastlane/report.xml
          destination: test-results
orbs:
  android: circleci/android@0.2.0
  react-native: react-native-community/react-native@4.4.2