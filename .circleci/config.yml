version: 2.1
workflows:
  testing-workflow:
    jobs:
      - checkout_code:
          context: shara-test
          merged: false
          commit: true
          versioning: true
          filters:
            branches:
              ignore:
                - master
                - develop
                - discovery
                - /^release.*/
                - shara-v2-designs
      - test:
          requires:
            - checkout_code
          filters:
            branches:
              ignore:
                - master
                - develop
                - discovery
                - /^release.*/
                - shara-v2-designs
      - fastlane:
          context: shara-test
          lane: internal
          gradleTask: assembleDevRelease
          testBuild: false
          requires:
            - checkout_code
            - test
          filters:
            branches:
              ignore:
                - master
                - develop
                - discovery
                - /^release.*/
                - shara-v2-designs
  discovery-workflow:
    jobs:
      - checkout_code:
          context: shara-discovery
          merged: true
          commit: true
          versioning: true
          filters:
            branches:
              only:
                - discovery
                - shara-v2-designs
      - test:
          requires:
            - checkout_code
      - fastlane:
          context: shara-discovery
          lane: internal
          gradleTask: assembleDiscoveryRelease
          requires:
            - test
          filters:
            branches:
              only:
                - discovery
                - shara-v2-designs
      - fastlane:
          context: shara-discovery
          lane: testlab
          testBuild: true
          gradleTask: assembleDiscoveryRelease
          requires:
            - test
          filters:
            branches:
              only:
                - discovery
                - shara-v2-designs
  delivery-workflow:
    jobs:
      - checkout_code:
          context: shara-dev
          merged: true
          commit: true
          versioning: true
          filters:
            branches:
              only:
                - develop
      - test:
          requires:
            - checkout_code
      - fastlane:
          context: shara-dev
          lane: internal
          gradleTask: assembleDeliveryRelease
          requires:
            - test
          filters:
            branches:
              only:
                - discovery
      - fastlane:
          context: shara-dev
          lane: testlab
          testBuild: true
          gradleTask: assembleDeliveryRelease
          requires:
            - test
          filters:
            branches:
              only:
                - discovery
  release-workflow:
    jobs:
      - checkout_code:
          context: shara-qa
          merged: true
          commit: false
          versioning: false
          filters:
            branches:
              only:
                - /^release.*/
      - test:
          requires:
            - checkout_code
      - fastlane:
          context: shara-qa
          lane: internal
          gradleTask: assembleQaRelease
          requires:
            - test
          filters:
            branches:
              only:
                - /^release.*/
      - fastlane:
          context: shara-qa
          lane: testlab
          testBuild: true
          gradleTask: assembleQaRelease
          requires:
            - test
          filters:
            branches:
              only:
                - /^release.*/
  beta-workflow:
    jobs:
      - checkout_code:
          context: shara-beta
          merged: true
          commit: true
          versioning: false
          filters:
            branches:
              only:
                - master
      - test:
          requires:
            - checkout_code
      - fastlane:
          context: shara-beta
          lane: play
          track: beta
          gradleTask: assembleProductionRelease
          requires:
            - test
          filters:
            branches:
              only:
                - master
      - fastlane:
          context: shara-beta
          lane: internal
          gradleTask: assembleProductionRelease
          requires:
            - test
          filters:
            branches:
              only:
                - master
jobs:
  checkout_code:
    docker:
      - image: circleci/node:12
    parameters:
      merged:
        type: boolean
        default: false
      commit:
        type: boolean
        default: false
      versioning:
        type: boolean
        default: true
    steps:
      - checkout
      - android/install-ndk:
          ndk-version: android-ndk-r19c
      - run:
          name: Yarn Install Dependencies
          command: |
            yarn install
            yarn jetify
      - unless:
          condition: <<parameters.versioning>>
          steps:
            - run:
                name: No Versioning. Just use release version
                command: |
                  NEW_VERSION=$(jq ".version" -r package.json)
                  BRANCH_NAME=$(echo ${CIRCLE_BRANCH} | sed "s#/#.#g")
                  echo "export NEW_VERSION=${NEW_VERSION}" >> $BASH_ENV
                  echo "export BRANCH_NAME=${BRANCH_NAME}" >> $BASH_ENV
                  echo "NEW_VERSION=${NEW_VERSION}"
                  echo "BRANCH_NAME=${BRANCH_NAME}"
      - when:
          condition: <<parameters.versioning>>
          steps:
            - when:
                condition: <<parameters.merged>>
                steps:
                  - run:
                      name: Auto-versioning >>  When Master, Discovery or Develop bump patch
                      command: |
                        CURRENT_VERSION=$(jq ".version" -r package.json)
                        NEW_VERSION=$(./bin/semver bump patch ${CURRENT_VERSION});
                        BRANCH_NAME=$(echo ${CIRCLE_BRANCH} | sed "s#/#.#g")
                        NEW_VERSION=$(./bin/semver bump prerel "${BRANCH_NAME}" ${NEW_VERSION});
                        jq ".version=\"${NEW_VERSION}\"" package.json > package.json-new && mv package.json-new package.json
                        echo "export NEW_VERSION=${NEW_VERSION}" >> $BASH_ENV
                        echo "BRANCH_NAME=${BRANCH_NAME}"
                        echo "CURRENT_VERSION=${CURRENT_VERSION}"
                        echo "NEW_VERSION=${NEW_VERSION}"
            - unless:
                condition: <<parameters.merged>>
                steps:
                  - run:
                      name: Auto-versioning >> When unmerged i.e. feature branches, bump build
                      command: |
                        CURRENT_VERSION=$(jq ".version" -r package.json)
                        BRANCH_NAME=$(echo ${CIRCLE_BRANCH} | sed "s#/#.#g")
                        BRANCH_VERSION=$(./bin/semver bump prerel "${BRANCH_NAME}" ${CURRENT_VERSION});
                        NEW_VERSION=$(./bin/semver bump build "build.${CIRCLE_BUILD_NUM}" ${BRANCH_VERSION});
                        jq ".version=\"${NEW_VERSION}\"" package.json > package.json-new && mv package.json-new package.json
                        echo "export NEW_VERSION=${NEW_VERSION}" >> $BASH_ENV
                        echo "BRANCH_NAME=${BRANCH_NAME}"
                        echo "CURRENT_VERSION=${CURRENT_VERSION}"
                        echo "NEW_VERSION=${NEW_VERSION}"
            - when:
                condition: <<parameters.commit>>
                steps:
                  - add_ssh_keys:
                      fingerprints:
                        - "90:6e:55:bd:ec:dd:c7:3b:72:d9:11:1c:74:e6:13:98"
                  - run:
                      name: Commit and Push version update
                      command: |
                        git config --global user.email "pipeline@circleci.com" && git config --global user.name "CircleCI Pipeline"
                        git add package.json
                        git commit -m "Bumped version to ${NEW_VERSION} [skip ci]"
                        git push --set-upstream origin ${CIRCLE_BRANCH}
                  - when:
                      condition: <<parameters.merged>>
                      steps:
                        - run:
                            name: Create Tag and Push
                            command: |
                              git tag ${NEW_VERSION}
                              git push --set-upstream origin ${NEW_VERSION}
      - run:
          name: Setup Credentials
          command: |
            echo -n ${FIREBASE_GOOGLE_SERVICES_KEY} | base64 -d -i > android/app/google-services.json
            echo -n ${GOOGLE_PLAY_STORE_SERVICE_ACCOUNT_KEY} | base64 -d -i > android/google-play-store-service-account.json
            echo -n ${FIREBASE_TESTLAB_SERVICE_KEY} | base64 -d -i > android/${FIREBASE_TESTLAB_SERVICE_KEY_FILE}
            echo -n ${SHARE_ANDROID_KEYSTORE} | base64 -d -i > android/app/shara.keystore
            echo -n ${SHARA_MOBILE_ENV} | base64 -d -i > .env
            echo -n ${SHARA_ANDROID_KEYSTORE_CREDENTIALS} | base64 -d -i >> android/gradle.properties
      - persist_to_workspace:
          paths: .
          root: .
  test:
    docker:
      - image: circleci/node:12
    steps:
      - attach_workspace:
          at: .
      - run:
          command: yarn lint
          name: Run ESLint
  fastlane:
    parameters:
      lane:
        type: string
        default: test
      track:
        type: string
        default: internal
      gradleTask:
        type: string
        default: assembleRelease
      testersGroup:
        type: string
        default: shara-product
      testBuild:
        type: boolean
        default: false
    docker:
      - image: circleci/android:api-27-node
    resource_class: xlarge
    steps:
      - attach_workspace:
          at: .
      - when:
          condition: <<parameters.testBuild>>
          steps:
            - run:
                name: Test Build Config
                command: |
                  echo '' >> .env
                  echo 'CI_TESTS=true' >> .env
      - unless:
          condition: <<parameters.testBuild>>
          steps:
            - run:
                name: Release Build Config
                command: |
                  echo '' >> .env
                  echo 'CI_TESTS=false' >> .env
      - run:
          name: Set Version
          command: |
            NEW_VERSION=$(jq ".version" -r package.json)
            echo "export NEW_VERSION=${NEW_VERSION}" >> $BASH_ENV
            echo "export SHARA_VERSION_NAME=${NEW_VERSION}" >> $BASH_ENV
            echo "export SHARA_VERSION_CODE=${CIRCLE_BUILD_NUM}" >> $BASH_ENV
            echo "NEW_VERSION=${NEW_VERSION}"
      - run:
          name: Install Fastlane & Firebase tools
          command: |
            cd android
            bundle install
            curl -sL https://firebase.tools | bash
      - run:
          name: Install Sentry CLI
          command: |
            curl -sL https://sentry.io/get-cli/ | bash
            VERSION=`sentry-cli releases propose-version`
            sentry-cli releases finalize "$VERSION"
            sentry-cli releases set-commits "$VERSION" --auto
            echo "Sentry Version: ${VERSION}"
      - run:
          name: Fastlane <<parameters.lane>> <<parameters.track>>
          no_output_timeout: 30m
          command: |
            NEW_VERSION=$(jq ".version" -r package.json)
            export NEW_VERSION=${NEW_VERSION}
            export SHARA_VERSION_NAME=${NEW_VERSION}
            export SHARA_VERSION_CODE=${CIRCLE_BUILD_NUM}
            cd android
            bundle exec fastlane <<parameters.lane>>
          environment:
            GOOGLE_PLAY_TRACK: <<parameters.track>>
            GRADLE_TASK: <<parameters.gradleTask>>
            FIREBASE_APP_DIST_GROUP: <<parameters.testersGroup>>
            GOOGLE_PROJECT_ID: shara-dev
            # TODO Add `GOOGLE_PROJECT_ID` using environment variables or parameters
      - store_artifacts:
          path: fastlane/report.xml
          destination: test-results
orbs:
  android: circleci/android@0.2.1
  react-native: react-native-community/react-native@4.4.2